name: Consensus Clustering test & build

on:
  push:
    branches: [master, main]

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-$
          restore-keys: |
            poetry-$

      - name: Install Dependencies using Poetry
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run pytest
        run: poetry run python -m pytest --import-mode=append tests --cov=tests --cov=consensusclustering --cov-report=xml --cov-fail-under=50

      - name: Run Coverage
        run: poetry run python -m coverage report -m;

      - name: Generate XML Report
        run: poetry run python -m coverage xml

      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: poetry config pypi-token.pypi $PYPI_TOKEN && poetry publish --build
